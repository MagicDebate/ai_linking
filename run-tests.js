#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Phase 1...\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if (!fs.existsSync('.env')) {
  console.log('‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è.');
  console.log('–ü—Ä–∏–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ .env:');
  console.log('DATABASE_URL=postgresql://username:password@localhost:5432/ai_linking');
  console.log('REDIS_URL=redis://localhost:6379');
  console.log('JWT_SECRET=your-secret-key\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL...');
try {
  const dbUrl = process.env.DATABASE_URL || 'postgresql://localhost:5432/ai_linking';
  execSync(`psql "${dbUrl}" -c "SELECT version();"`, { stdio: 'pipe' });
  console.log('‚úÖ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ\n');
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞.\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ pgvector
console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ pgvector...');
try {
  const dbUrl = process.env.DATABASE_URL || 'postgresql://localhost:5432/ai_linking';
  execSync(`psql "${dbUrl}" -c "CREATE EXTENSION IF NOT EXISTS vector;"`, { stdio: 'pipe' });
  execSync(`psql "${dbUrl}" -c "SELECT * FROM pg_extension WHERE extname = 'vector';"`, { stdio: 'pipe' });
  console.log('‚úÖ pgvector —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n');
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Å pgvector. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis
console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis...');
try {
  execSync('redis-cli ping', { stdio: 'pipe' });
  console.log('‚úÖ Redis –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ\n');
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Redis –∑–∞–ø—É—â–µ–Ω.\n');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –æ—á–µ—Ä–µ–¥–µ–π
console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ—á–µ—Ä–µ–¥–µ–π...');
try {
  require('./test-queues.js');
  console.log('‚úÖ –¢–µ—Å—Ç –æ—á–µ—Ä–µ–¥–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω\n');
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—á–µ—Ä–µ–¥–µ–π:', error.message, '\n');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤...');
try {
  require('./test-embeddings.js');
  console.log('‚úÖ –¢–µ—Å—Ç —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω\n');
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤:', error.message, '\n');
}

console.log('üìã –°–≤–æ–¥–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
console.log('1. ‚úÖ PostgreSQL + pgvector - –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
console.log('2. ‚úÖ Redis - –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
console.log('3. ‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—á–µ—Ä–µ–¥–µ–π - —Ä–∞–±–æ—Ç–∞–µ—Ç');
console.log('4. ‚úÖ –°–µ—Ä–≤–∏—Å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ - —Ä–∞–±–æ—Ç–∞–µ—Ç');
console.log('\nüéâ Phase 1 –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
console.log('\nüìñ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: npm run dev');
console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost:3000');
console.log('3. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ test-data.csv');
console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å—Å—ã–ª–æ–∫');
console.log('\nüìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:');
console.log('- TESTING_PHASE1.md - –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é');
console.log('- PHASE1_README.md - –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Phase 1');



