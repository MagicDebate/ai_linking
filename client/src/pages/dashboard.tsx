import { useState, useEffect } from "react";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { useAuth, useLogout } from "@/hooks/useAuth";
import { useLocation } from "wouter";
import { apiRequest } from "@/lib/queryClient";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Separator } from "@/components/ui/separator";
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu";
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { useForm } from "react-hook-form";
import { useToast } from "@/hooks/use-toast";
import { 
  Plus, 
  MoreVertical, 
  Settings, 
  LogOut, 
  User, 
  CheckCircle2, 
  Circle,
  X,
  ExternalLink,
  Lightbulb,
  Upload,
  Bug
} from "lucide-react";
import { formatDistanceToNow } from "date-fns";


interface Project {
  id: string;
  name: string;
  domain: string;
  status: "QUEUED" | "READY";
  updatedAt: string;
}

interface UserProgress {
  createProject: boolean;
  uploadTexts: boolean;
  setPriorities: boolean;
  generateDraft: boolean;
}

interface CreateProjectForm {
  name: string;
  domain: string;
}

export default function Dashboard() {
  const { user } = useAuth();
  const logout = useLogout();
  const queryClient = useQueryClient();
  const { toast } = useToast();
  const [, setLocation] = useLocation();
  const [isCreateProjectOpen, setIsCreateProjectOpen] = useState(false);
  const [notificationDismissed, setNotificationDismissed] = useState(false);


  const { register, handleSubmit, reset, formState: { errors } } = useForm<CreateProjectForm>();

  // Check localStorage for dismissed notification
  useEffect(() => {
    const dismissed = localStorage.getItem("seo-notification-dismissed");
    setNotificationDismissed(dismissed === "true");
  }, []);

  // Queries
  const { data: projects = [] } = useQuery<Project[]>({
    queryKey: ["/api/projects"],
  });

  const { data: progress } = useQuery<UserProgress>({
    queryKey: ["/api/progress"],
  });

  // Mutations
  const createProjectMutation = useMutation({
    mutationFn: async (data: CreateProjectForm) => {
      const response = await apiRequest("POST", "/api/projects", data);
      return response.json();
    },
    onSuccess: (newProject) => {
      queryClient.invalidateQueries({ queryKey: ["/api/projects"] });
      queryClient.invalidateQueries({ queryKey: ["/api/progress"] });
      setIsCreateProjectOpen(false);
      reset();
      toast({
        title: "–£—Å–ø–µ—à–Ω–æ",
        description: "–ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω!",
      });
      // Redirect to project page
      setLocation(`/project/${newProject.id}`);
    },
    onError: (error: Error) => {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: error.message,
        variant: "destructive",
      });
    },
  });

  const deleteProjectMutation = useMutation({
    mutationFn: async (id: string) => {
      await apiRequest("DELETE", `/api/projects/${id}`);
    },
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["/api/projects"] });
      toast({
        title: "–£—Å–ø–µ—à–Ω–æ",
        description: "–ü—Ä–æ–µ–∫—Ç —É–¥–∞–ª–µ–Ω!",
      });
    },
  });

  const handleLogout = () => {
    logout.mutate();
  };

  const onCreateProject = (data: CreateProjectForm) => {
    createProjectMutation.mutate(data);
  };

  const handleDeleteProject = (id: string) => {
    if (confirm("–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç?")) {
      deleteProjectMutation.mutate(id);
    }
  };

  const dismissNotification = () => {
    localStorage.setItem("seo-notification-dismissed", "true");
    setNotificationDismissed(true);
  };

  const getProgressPercentage = () => {
    if (!progress) return 0;
    const completed = Object.values(progress).filter(Boolean).length;
    return (completed / 4) * 100;
  };

  const getCompletedSteps = () => {
    if (!progress) return 0;
    return Object.values(progress).filter(Boolean).length;
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="sticky top-0 z-50 bg-white border-b border-gray-200 h-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 h-full">
          <div className="flex items-center justify-between h-full">
            <div className="flex items-center">
              <h1 className="text-xl font-bold text-blue-600 cursor-pointer">
                SEO LinkBuilder
              </h1>
            </div>
            
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button variant="ghost" size="sm" className="flex items-center gap-2">
                  <User className="h-4 w-4" />
                  {user?.email}
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end" className="w-48">
                <DropdownMenuItem>
                  <Settings className="h-4 w-4 mr-2" />
                  –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                </DropdownMenuItem>
                <Separator className="my-1" />
                <DropdownMenuItem onClick={handleLogout} className="text-red-600">
                  <LogOut className="h-4 w-4 mr-2" />
                  –í—ã—Ö–æ–¥
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </div>
        </div>
      </header>

      {/* Notification Banner */}
      {!notificationDismissed && (
        <div className="bg-blue-50 border-b border-blue-200">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3">
            <div className="flex items-center justify-between">
              <div className="flex items-center">
                <Lightbulb className="h-5 w-5 text-blue-600 mr-2" />
                <span className="text-blue-800">
                  –ù–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –¥–µ—Ç–µ–∫—Ç–∞ –∫–∞–Ω–Ω–∏–±–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–µ–Ω üí°
                </span>
                <Button variant="link" className="text-blue-600 p-0 ml-2 h-auto">
                  –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                  <ExternalLink className="h-3 w-3 ml-1" />
                </Button>
              </div>
              <Button 
                variant="ghost" 
                size="sm" 
                onClick={dismissNotification}
                className="text-blue-600 hover:bg-blue-100"
              >
                <X className="h-4 w-4" />
              </Button>
            </div>
          </div>
        </div>
      )}

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="flex gap-8">
          {/* Main Content */}
          <div className="flex-1">
            {/* Title Section */}
            <div className="mb-8">
              <div className="flex items-center justify-between">
                <div>
                  <h1 className="text-3xl font-bold text-gray-900 mb-2">–í–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã</h1>
                  <p className="text-gray-600">–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ –≤ –æ–¥–∏–Ω –∫–ª–∏–∫</p>
                </div>

              </div>
            </div>

            {/* Content Area */}
            <div className="space-y-6">
              {/* Create Project Card */}
              <Dialog open={isCreateProjectOpen} onOpenChange={setIsCreateProjectOpen}>
                <DialogTrigger asChild>
                  <Card className="border-dashed border-2 border-gray-300 hover:border-blue-400 transition-colors cursor-pointer">
                    <CardContent className="p-8 text-center">
                      <Plus className="h-12 w-12 text-gray-400 mx-auto mb-4" />
                      <h3 className="text-lg font-semibold text-gray-900 mb-2">–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç</h3>
                      <div className="text-sm text-gray-500 space-y-1">
                        <p>1 ‚Äî –£–∫–∞–∂–∏—Ç–µ –¥–æ–º–µ–Ω</p>
                        <p>2 ‚Äî –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–µ–∫—Å—Ç—ã</p>
                        <p>3 ‚Äî –ü–æ–ª—É—á–∏—Ç–µ —á–µ—Ä–Ω–æ–≤–∏–∫</p>
                      </div>
                    </CardContent>
                  </Card>
                </DialogTrigger>
                <DialogContent>
                  <DialogHeader>
                    <DialogTitle>–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç</DialogTitle>
                  </DialogHeader>
                  <p className="sr-only">–§–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ SEO –ø—Ä–æ–µ–∫—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –¥–æ–º–µ–Ω–∞</p>
                  <form onSubmit={handleSubmit(onCreateProject)} className="space-y-4">
                    <div>
                      <Label htmlFor="name">–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞</Label>
                      <Input
                        id="name"
                        placeholder="–ú–æ–π SEO –ø—Ä–æ–µ–∫—Ç"
                        {...register("name", { required: "–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ" })}
                      />
                      {errors.name && (
                        <p className="text-sm text-red-600 mt-1">{errors.name.message}</p>
                      )}
                    </div>
                    <div>
                      <Label htmlFor="domain">–î–æ–º–µ–Ω</Label>
                      <Input
                        id="domain"
                        placeholder="example.com"
                        {...register("domain", { required: "–î–æ–º–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω" })}
                      />
                      {errors.domain && (
                        <p className="text-sm text-red-600 mt-1">{errors.domain.message}</p>
                      )}
                    </div>
                    <div className="flex gap-2 pt-4">
                      <Button type="submit" disabled={createProjectMutation.isPending}>
                        {createProjectMutation.isPending ? "–°–æ–∑–¥–∞–µ–º..." : "–°–æ–∑–¥–∞—Ç—å"}
                      </Button>
                      <Button 
                        type="button" 
                        variant="outline" 
                        onClick={() => setIsCreateProjectOpen(false)}
                      >
                        –û—Ç–º–µ–Ω–∞
                      </Button>
                    </div>
                  </form>
                </DialogContent>
              </Dialog>

              {/* Project List */}
              {projects.length > 0 && (
                <div className="space-y-4">
                  {projects.slice(0, 5).map((project) => (
                    <Card key={project.id} className="hover:shadow-md transition-shadow">
                      <CardContent className="p-6">
                        <div className="flex items-center justify-between">
                          <div 
                            className="flex-1 cursor-pointer"
                            onClick={() => setLocation(`/project/${project.id}`)}
                          >
                            <div className="flex items-center gap-3">
                              <div>
                                <h3 className="text-lg font-semibold text-gray-900 hover:text-blue-600">{project.domain}</h3>
                                <p className="text-sm text-gray-500">{project.name}</p>
                              </div>
                              <Badge variant={project.status === "READY" ? "default" : "secondary"}>
                                {project.status === "READY" ? "Ready" : "Queued"}
                              </Badge>
                            </div>
                            <p className="text-sm text-gray-500 mt-2">
                              –æ–±–Ω–æ–≤–ª–µ–Ω–æ {formatDistanceToNow(new Date(project.updatedAt), { addSuffix: true })}
                            </p>
                          </div>
                          
                          <DropdownMenu>
                            <DropdownMenuTrigger asChild>
                              <Button variant="ghost" size="sm">
                                <MoreVertical className="h-4 w-4" />
                              </Button>
                            </DropdownMenuTrigger>
                            <DropdownMenuContent align="end">
                              <DropdownMenuItem>
                                <Settings className="h-4 w-4 mr-2" />
                                –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                              </DropdownMenuItem>
                              <DropdownMenuItem 
                                onClick={() => handleDeleteProject(project.id)}
                                className="text-red-600"
                              >
                                <X className="h-4 w-4 mr-2" />
                                –£–¥–∞–ª–∏—Ç—å
                              </DropdownMenuItem>
                            </DropdownMenuContent>
                          </DropdownMenu>
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                  
                  {projects.length > 5 && (
                    <Button variant="outline" className="w-full">
                      –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã ({projects.length})
                    </Button>
                  )}
                </div>
              )}
            </div>

            {/* FAQ Section */}
            <div className="mt-16 max-w-3xl mx-auto">
              <Accordion type="single" collapsible className="w-full">
                <AccordionItem value="spam">
                  <AccordionTrigger>–°–µ—Ä–≤–∏—Å –¥–æ–±–∞–≤–∏—Ç —Å–ø–∞–º-—Å—Å—ã–ª–∫–∏ –∏ –º–µ–Ω—è –∑–∞–±–∞–Ω–∏—Ç Google?</AccordionTrigger>
                  <AccordionContent>
                    –ù–∞—à –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º Google –ø–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ø–µ—Ä–µ–ª–∏–Ω–∫–æ–≤–∫–µ. 
                    –ú—ã —Å–æ–∑–¥–∞–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–º –∞–Ω–∞–ª–∏–∑–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.
                  </AccordionContent>
                </AccordionItem>
                
                <AccordionItem value="approval">
                  <AccordionTrigger>–ö–∞–∫ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è –±–µ–∑ –º–æ–µ–≥–æ –æ–¥–æ–±—Ä–µ–Ω–∏—è?</AccordionTrigger>
                  <AccordionContent>
                    –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ –≤–∏–¥–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞. –ù–∏—á–µ–≥–æ –Ω–µ –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ - 
                    –≤—ã –≤—Å–µ–≥–¥–∞ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –æ –≤–Ω–µ–¥—Ä–µ–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫.
                  </AccordionContent>
                </AccordionItem>
                
                <AccordionItem value="security">
                  <AccordionTrigger>–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ–¥ NDA, –±–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏?</AccordionTrigger>
                  <AccordionContent>
                    –í—Å–µ –¥–∞–Ω–Ω—ã–µ —à–∏—Ñ—Ä—É—é—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–∏. –¢–µ–∫—Å—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é—Ç—Å—è 
                    –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ú—ã —Å–æ–±–ª—é–¥–∞–µ–º –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è GDPR –∏ –º–æ–∂–µ–º –ø–æ–¥–ø–∏—Å–∞—Ç—å NDA.
                  </AccordionContent>
                </AccordionItem>
                
                <AccordionItem value="canonicalization">
                  <AccordionTrigger>–ß—Ç–æ —Å –∫–∞–Ω–æ–Ω–∏–∫–æ–π –∏ –∫–∞–Ω–Ω–∏–±–∞–ª–∏–∑–∞—Ü–∏–µ–π?</AccordionTrigger>
                  <AccordionContent>
                    –£ –Ω–∞—Å –µ—Å—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–æ—Ä –∫–∞–Ω–Ω–∏–±–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤. 
                    –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Å—ã–ª–æ–∫.
                  </AccordionContent>
                </AccordionItem>
                
                <AccordionItem value="manual">
                  <AccordionTrigger>–ö–∞–∫ –∑–∞—â–∏—Ç–∏—Ç—å —Ä—É—á–Ω—É—é —Å–µ—Ç–∫—É —Å—Å—ã–ª–æ–∫?</AccordionTrigger>
                  <AccordionContent>
                    –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å—Ç–æ–ø-–ª–∏—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü –∏ –∞–Ω–∫–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –∏–∑–º–µ–Ω—è—Ç—å. 
                    –†—É—á–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –±—É–¥—É—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.
                  </AccordionContent>
                </AccordionItem>
                
                <AccordionItem value="cms">
                  <AccordionTrigger>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ —Å–µ—Ä–≤–∏—Å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ CMS?</AccordionTrigger>
                  <AccordionContent>
                    –î–∞! –ú—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç/–∏–º–ø–æ—Ä—Ç —á–µ—Ä–µ–∑ CSV, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Git, 
                    –∞ —Ç–∞–∫–∂–µ –∏–º–µ–µ–º –≥–æ—Ç–æ–≤—ã–π –ø–ª–∞–≥–∏–Ω –¥–ª—è WordPress.
                  </AccordionContent>
                </AccordionItem>
              </Accordion>
            </div>
          </div>

          {/* Right Sidebar */}
          <div className="w-80 flex-shrink-0">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center justify-between">
                  –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
                  <span className="text-sm font-normal text-gray-500">
                    {getCompletedSteps()}/4
                  </span>
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <Progress value={getProgressPercentage()} className="w-full" />
                
                <div className="space-y-3">
                  <div className="flex items-center gap-3">
                    {progress?.createProject ? (
                      <CheckCircle2 className="h-5 w-5 text-green-600" />
                    ) : (
                      <Circle className="h-5 w-5 text-gray-400" />
                    )}
                    <span className={progress?.createProject ? "text-green-600" : "text-gray-700"}>
                      –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
                    </span>
                  </div>
                  
                  <div className="flex items-center gap-3">
                    {progress?.uploadTexts ? (
                      <CheckCircle2 className="h-5 w-5 text-green-600" />
                    ) : (
                      <Circle className="h-5 w-5 text-gray-400" />
                    )}
                    <span className={progress?.uploadTexts ? "text-green-600" : "text-gray-400"}>
                      –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—Å—Ç—ã
                    </span>
                  </div>
                  
                  <div className="flex items-center gap-3">
                    {progress?.setPriorities ? (
                      <CheckCircle2 className="h-5 w-5 text-green-600" />
                    ) : (
                      <Circle className="h-5 w-5 text-gray-400" />
                    )}
                    <span className={
                      progress?.setPriorities ? "text-green-600" : 
                      !progress?.uploadTexts ? "text-gray-400" : "text-gray-700"
                    }>
                      –í—ã–±—Ä–∞—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã
                    </span>
                  </div>
                  
                  <div className="flex items-center gap-3">
                    {progress?.generateDraft ? (
                      <CheckCircle2 className="h-5 w-5 text-green-600" />
                    ) : (
                      <Circle className="h-5 w-5 text-gray-400" />
                    )}
                    <span className={
                      progress?.generateDraft ? "text-green-600" : 
                      !progress?.setPriorities ? "text-gray-400" : "text-gray-700"
                    }>
                      –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫
                    </span>
                  </div>
                </div>
              </CardContent>
            </Card>
            
            {/* Debug section */}
            <Card className="mt-4">
              <CardHeader>
                <CardTitle className="text-sm">–û—Ç–ª–∞–¥–∫–∞</CardTitle>
              </CardHeader>
              <CardContent>
                <Button 
                  variant="outline" 
                  size="sm" 
                  className="w-full"
                  onClick={() => window.open('/debug/pages', '_blank')}
                >
                  <Bug className="w-4 h-4 mr-2" />
                  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü
                </Button>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
      
      {/* Import Wizard */}

    </div>
  );
}