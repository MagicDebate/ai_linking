Цель
Создать минимально-рабочий серверный модуль, который обеспечивает:
1. регистрацию и вход по email-паролю;
2. вход/регистрацию через Google OAuth 2.0;
3. проверку текущей сессии;
4. выход из системы.

Требуемый функционал
────────────────────
◾ Сущность пользователя
   - id (строка/UUID), email (уникальный), passwordHash (опционально),
     provider: LOCAL | GOOGLE, googleId (опционально), createdAt.

◾ API-эндпоинты
| Метод | Маршрут                    | Назначение                           |
|-------|----------------------------|--------------------------------------|
| POST  | /auth/register             | Регистрация { email, password }      |
| POST  | /auth/login                | Вход по паролю { email, password }   |
| GET   | /auth/google               | Редирект на Google OAuth             |
| GET   | /auth/google/callback      | Приём code, логин/регистрация        |
| GET   | /auth/me                   | Вернуть профиль, если залогинен      |
| POST  | /auth/logout               | Выход, очистить куки                 |

◾ Потоки
1. **Регистрация**  
   • Проверить формат email и длину пароля (≥ 8).  
   • Захешировать пароль.  
   • Создать запись пользователя с provider = LOCAL.  

2. **Логин**  
   • Сравнить пароль с хэшем.  
   • Выдать access- и refresh-токены (JWT) и положить их в httpOnly-cookies.  

3. **Google OAuth**  
   • Если email новый — создать пользователя с provider = GOOGLE.  
   • Если email уже есть (LOCAL) — привязать googleId.  
   • После колбэка выдать такие же токены и куки, как при логине.  

4. **Обновление сессии**  
   • Access-токен — 15 мин.  
   • Refresh-токен — 30 дней (роллинг-обновление).  

Безопасность и UX
─────────────────
▪ Хранить токены в httpOnly-cookies, SameSite=Lax, Secure (в проде).  
▪ Ограничить /auth/*: не более 20 запросов за 10 мин с одного IP.  
▪ Возвращать понятные статусы: 400 (валидация), 401 (неверный пароль), 409 (email занят).  

Проверка готовности (smoke-тест)
────────────────────────────────
1. POST /auth/register → 200 и установка куки.  
2. GET /auth/me с полученной кукой → возвращает email.  
3. GET /auth/google → проходит OAuth, /callback устанавливает куку, /auth/me отдаёт профиль.